package models;

import javax.persistence.*;
import play.db.ebean.*;

@Entity public class SecurityQuestion extends Model {
	// autogenerated
    @Id public Long id; public Long getId() {return this.id;} public SecurityQuestion setId(Long id) {this.id = id; return this;}
    
    // has one User
    public String userUsername; public String getUserUsername() {return this.userUsername;} public SecurityQuestion setUserUsername(String userUsername) {this.userUsername = userUsername; return this;}
    public User findUser() {return User.find.ref(userUsername);}
    
    // has one FinancialInstitution 
    public Long financialInstitutionId; public Long getFinancialInstitutionId() {return this.financialInstitutionId;} public SecurityQuestion setFinancialInstitutionId(Long financialInstitutionId) {this.financialInstitutionId = financialInstitutionId; return this;}
    public FinancialInstitution findFinancialInstitution() {return FinancialInstitution.find.ref(financialInstitutionId);}
    
    public String ofxUser; public String getOfxUser() {return this.ofxUser;} public SecurityQuestion setOfxUser(String ofxUser) {this.ofxUser = ofxUser; return this;}
    public String ofxPassword; public String getOfxPassword() {return this.ofxPassword;} public SecurityQuestion setOfxPassword(String ofxPassword) {this.ofxPassword = ofxPassword; return this;}
    public String ccNumber; public String getCcNumber() {return this.ccNumber;} public SecurityQuestion setCcNumber(String ccNumber) {this.ccNumber = ccNumber; return this;}
    
    public static SecurityQuestion create(String userUsername, Long financialInstitutionId, String ofxUser, String ofxPassword, String ccNumber) {
        return (new SecurityQuestion()).setUserUsername(userUsername).setFinancialInstitutionId(financialInstitutionId).setOfxUser(ofxUser).setOfxPassword(ofxPassword).setCcNumber(ccNumber).saveGet();
    }
    public SecurityQuestion saveGet() {this.save(); return this;}
    public static Finder<Long, SecurityQuestion> find = new Finder<Long, SecurityQuestion>(Long.class, SecurityQuestion.class);
}